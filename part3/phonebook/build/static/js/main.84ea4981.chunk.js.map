{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/server.js","App.js","index.js"],"names":["Filter","props","name","onChange","PersonForm","number","handleChange","onSubmit","value","type","Persons","persons","onDelete","map","x","key","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","msg","startsWith","notificationStyle","color","backgroundColor","width","fontSize","border","borderRadius","style","App","useState","setPersons","newName","setNewName","filterVal","setFilterVal","statusMsg","setStatusMsg","useEffect","server","personsData","event","toFilter","target","preventDefault","idx","length","isExisting","findIndex","p","toLowerCase","window","confirm","newPersons","setTimeout","catch","err","console","log","message","concat","filter","indexOf","f","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84ea4981.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with\n      <input name='filter' onChange={props.onChange} />\n    </div>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = (props) => {\n  const { name, number, handleChange, onSubmit } = props;\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name:\n        <input name='name' value={name} onChange={handleChange} />\n        number:\n        <input name='number' value={number} onChange={handleChange} />\n      </div>\n      <div>\n        <button type='submit'>add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from 'react';\n\nconst Persons = ({ persons, onDelete }) => {\n\n  return (\n    <div>\n      {persons.map((x) => (\n        <p key={x.name}>\n          {x.name} {x.number}\n          <button onClick={() => onDelete(x)}>delete</button>\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((response) => response.data);\n}\n\nexport default { getAll, create, update, remove };\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport server from './services/server';\n\nconst Notification = (props) => {\n  if (props.msg === null) {\n    return null;\n  }\n  const type = props.msg.startsWith('The') ? 'red' : 'green';\n  const notificationStyle = {\n    color: type,\n    backgroundColor: '#D3D3D3',\n    width: '100%',\n    fontSize: 20,\n    border: `2px solid ${type}`,\n    borderRadius: 5,\n  };\n  return (\n    <div style={notificationStyle}>\n      <p>{props.msg}</p>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState({ name: '', number: '' });\n  const [filterVal, setFilterVal] = useState('');\n  const [statusMsg, setStatusMsg] = useState(null);\n\n  useEffect(() => {\n    server.getAll().then((personsData) => {\n      setPersons(personsData);\n    });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let idx = persons.length === 0 ? 1 : persons[persons.length - 1].id + 1;\n    const isExisting = persons.findIndex(\n      (p) => p.name.toLowerCase() === newName.name.toLowerCase()\n    );\n    if (isExisting > -1) {\n      if (\n        window.confirm(\n          `${persons[isExisting].name} is already added to the phonebook, replace the old number with a new one?`\n        )\n      ) {\n        server\n          .update(persons[isExisting].id, {\n            ...persons[isExisting],\n            number: newName.number,\n          })\n          .then((response) => {\n            const newPersons = [...persons];\n            newPersons[isExisting].number = newName.number;\n            setPersons(newPersons);\n            setStatusMsg(`Added ${newName.name}`);\n            setTimeout(() => {\n              setStatusMsg(null);\n            }, 3000);\n          })\n          .catch((err) => {\n            console.log(err.response.data.message);\n            setTimeout(() => {\n              setStatusMsg(err.response.data.message);\n            }, 2000);\n          });\n      }\n    } else {\n      server\n        .create({ name: newName.name, number: newName.number, id: idx })\n        .then((response) => {\n          console.log(response);\n          setPersons(\n            persons.concat({\n              name: newName.name,\n              number: newName.number,\n              id: idx,\n            })\n          );\n          setStatusMsg(`Added ${newName.name}`);\n          setTimeout(() => {\n            setStatusMsg(null);\n          }, 3000);\n        })\n        .catch((err) => {\n          console.log(err.response.data.message);\n          setTimeout(() => {\n            setStatusMsg(err.response.data.message);\n          }, 2000);\n        });\n    }\n  };\n\n  const handleChange = (event) => {\n    setNewName({\n      ...newName,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const filterChange = (event) => {\n    const toFilter = event.target.value;\n    setFilterVal(toFilter);\n  };\n\n  const confirmDelete = (x) => {\n    const res = window.confirm(`Delete ${x.name}?`);\n    if (res === true) {\n      server\n        .remove(x.id)\n        .then((response) => {\n          const f = persons.filter((p) => p.id !== x.id);\n          setPersons(f);\n        })\n        .catch((err) => {\n          console.log(err);\n          setStatusMsg(\n            `The information of ${x.name} has already been removed from the server`\n          );\n          setTimeout(() => {\n            setStatusMsg(null);\n          }, 3000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification msg={statusMsg} />\n      <Filter onChange={filterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        name={newName.name}\n        number={newName.number}\n        handleChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={persons.filter(\n          (p) => p.name.toLowerCase().indexOf(filterVal) > -1\n        )}\n        onDelete={confirmDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}